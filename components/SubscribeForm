// components/SubscribeForm.tsx
"use client";
import { useState } from "react";

export default function SubscribeForm() {
  const [email, setEmail] = useState("");
  const [error, setError] = useState<string | null>(null);
  const [sent, setSent] = useState(false);

  function onSubmit(e: React.FormEvent<HTMLFormElement>) {
    e.preventDefault();
    const isValid = /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
    if (!isValid) {
      setError("Please enter a valid email address.");
      setSent(false);
      return;
    }
    setError(null);
    setSent(true);
    // TODO: hook to your API route or service
  }

  return (
    <form
      noValidate
      onSubmit={onSubmit}
      aria-describedby={error ? "email-error" : sent ? "email-success" : undefined}
      className="form"
    >
      <label htmlFor="email" className="label">Email address</label>
      <input
        id="email"
        name="email"
        type="email"
        inputMode="email"
        autoComplete="email"
        required
        value={email}
        onChange={(e) => setEmail(e.target.value)}
        className="input"
      />
      <button className="button">Subscribe</button>

      {error && (
        <p id="email-error" role="alert" className="error">
          {error}
        </p>
      )}
      {sent && !error && (
        <p id="email-success" role="status" className="success">
          Thanks! Check your inbox to confirm.
        </p>
      )}
    </form>
  );
}
